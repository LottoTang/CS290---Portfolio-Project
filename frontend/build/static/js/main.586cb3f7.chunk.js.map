{"version":3,"sources":["img/logo.png","components/Navigation.js","pages/HeaderPage.js","components/Exercise.js","components/ExerciseList.js","pages/HomePage.js","pages/AddExercisePage.js","pages/EditExercisePage.js","pages/FooterPage.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","to","className","HeaderPage","src","logo","alt","Exercise","exercise","onEdit","onDelete","name","reps","weight","unit","date","toLocaleString","slice","onClick","_id","ExerciseList","exercises","id","map","i","HomePage","setExercise","history","useHistory","useState","setExercises","loadExercises","a","fetch","response","json","onEditExercise","push","onDeleteExercise","method","status","getResponse","console","error","useEffect","AddExercisePage","setName","setReps","setWeight","setUnit","setDate","addExercise","newExercise","body","JSON","stringify","headers","alert","errMessage","Error","onSubmit","e","preventDefault","htmlFor","type","placeholder","value","onChange","target","required","pattern","min","EditExercisePage","dateVariable","undefined","editExercise","FooterPage","href","title","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.586cb3f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b28bc062.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdAddchart, MdOutlineEditNote } from 'react-icons/md';\nimport { HiOutlineHome } from 'react-icons/hi';\n\n\nfunction Navigation() {\n  return (\n    <nav>\n      <Link to=\"../add-exercise\"> \n        <MdAddchart className='icon'/> Add Record \n      </Link>\n\n      <Link to=\"/\"> \n        <HiOutlineHome className='icon'/> Home \n      </Link>\n      \n    </nav>\n  );\n}\n\nexport default Navigation;\n","import { Link } from 'react-router-dom';\r\nimport logo from '../img/logo.png';\r\nimport Navigation from '../components/Navigation';\r\n\r\nimport '../App.css';\r\n\r\nfunction HeaderPage() {\r\n    return(\r\n        <header>\r\n            <h1><Link to=\"/\"><img className=\"logo\" src={logo} alt=\"Workout!\"/></Link></h1>\r\n            <h3>Train today, Earn someday</h3>\r\n            <p>Personal Fitness Recorder</p>\r\n            <Navigation />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default HeaderPage;","import React from 'react';\r\nimport { MdDeleteForever } from 'react-icons/md';\r\nimport { MdOutlineEditNote } from 'react-icons/md';\r\n\r\n// importing moment.js for formatting date string\r\nimport moment from 'moment';\r\n\r\nfunction Exercise({ exercise, onEdit, onDelete }) {\r\n    return (\r\n        <tr>\r\n            <td data-label='Name' className='col col-1'>{exercise.name}</td>\r\n            <td data-label='Reps' className='col col-2'>{exercise.reps}</td>\r\n            <td data-label='Weight' className='col col-3'>{exercise.weight}</td>\r\n            <td data-label='Unit' className='col col-4'>{exercise.unit}</td>\r\n            <td data-label='Date' className='col col-5'>{exercise.date.toLocaleString('en-US').slice(0,10)}</td>\r\n            <td data-label='Edit' className='col col-6 row-icon'><MdOutlineEditNote onClick={() => onEdit(exercise)} /></td>\r\n            <td data-label='Delete' className='col col-7 row-icon'><MdDeleteForever onClick={() => onDelete(exercise._id)} /></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Exercise;","import React from 'react';\r\nimport Exercise from './Exercise';\r\n\r\nfunction ExerciseList({ exercises, onDelete, onEdit }) {\r\n    return (\r\n        <table id=\"exercises\">\r\n            <caption>Workout records</caption>\r\n            <thead>\r\n                <tr>\r\n                    <th className='col col-1'>Name</th>\r\n                    <th className='col col-2'>Reps</th>\r\n                    <th className='col col-3'>Weight</th>\r\n                    <th className='col col-4'>Unit</th>\r\n                    <th className='col col-5'>Date</th>\r\n                    <th className='col col-6'>Edit</th>\r\n                    <th className='col col-7'>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {exercises.map((exercise, i) => \r\n                    <Exercise \r\n                        exercise={exercise} \r\n                        key={i}\r\n                        onDelete={onDelete}\r\n                        onEdit={onEdit} \r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default ExerciseList;\r\n","import React from 'react';\r\nimport ExerciseList from '../components/ExerciseList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction HomePage({ setExercise }) {\r\n    // Use the history for updating\r\n    const history = useHistory();\r\n\r\n    // Use state to bring in the data\r\n    const [exercises, setExercises] = useState([]);\r\n\r\n    // RETRIEVE the list of movies\r\n    const loadExercises = async () => {\r\n        const response = await fetch('/exercises');\r\n        const exercises = await response.json();\r\n        setExercises(exercises);\r\n    } \r\n    \r\n    // UPDATE a movie\r\n    const onEditExercise = async exercise => {\r\n        setExercise(exercise);\r\n        history.push(\"/edit-exercise\");\r\n    }\r\n\r\n    // DELETE a movie  \r\n    const onDeleteExercise = async _id => {\r\n        const response = await fetch(`/exercises/${_id}`, { method: 'DELETE' });\r\n        if (response.status === 204) {\r\n            const getResponse = await fetch('/exercises');\r\n            const exercises = await getResponse.json();\r\n            setExercises(exercises);\r\n        } else {\r\n            console.error(`Failed to delete exercise with _id = ${_id}, status code = ${response.status}`)\r\n        }\r\n    }\r\n\r\n    // LOAD the exercises\r\n    useEffect(() => {\r\n        loadExercises();\r\n    }, []);\r\n\r\n    // DISPLAY the exercises\r\n    return (\r\n        <>\r\n            <article>\r\n                <h2> About Workout!</h2>\r\n                <p>Workout! is an application for tracking your workout records.</p>\r\n                <p>You are achieving your goals! Keep Going</p>\r\n                <hr />\r\n                <ExerciseList\r\n                    exercises={exercises} \r\n                    onEdit={onEditExercise} \r\n                    onDelete={onDeleteExercise} \r\n                />\r\n                <hr />\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const AddExercisePage = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [reps, setReps] = useState('');\r\n    const [weight, setWeight] = useState('');\r\n    const [unit, setUnit] = useState('lbs');\r\n    const [date, setDate] = useState('');\r\n    \r\n    const history = useHistory();\r\n\r\n    const addExercise = async () => {\r\n        const newExercise = { name, reps, weight, unit, date };\r\n        const response = await fetch('/exercises', {\r\n            method: 'post',\r\n            body: JSON.stringify(newExercise),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if(response.status === 201){\r\n            alert(\"Successfully added the exercise!\");\r\n        } else {\r\n            const errMessage = await response.json();\r\n            alert(`Failed to add exercise, status code = ${response.status}. \\n${errMessage.Error}`);\r\n        }\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <article>\r\n            <h2>Add Record</h2>\r\n            <p>Please fill in all the required field to add a record.</p>\r\n            <form onSubmit={(e) => { e.preventDefault();}}>   \r\n                <fieldset>\r\n                    <legend>Workout record</legend>\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"name\">Exercise</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Must not be an empty string.\"\r\n                            value= {name}\r\n                            onChange={e => setName(e.target.value)} \r\n                            id=\"exercise\" \r\n                            required\r\n                            pattern=\"\\S+.*\"/>\r\n                    </div>\r\n                    \r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"reps\">Repetitions</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={reps}\r\n                                placeholder=\"Must be greater than 0.\"\r\n                                onChange={e => setReps(e.target.value)} \r\n                                id=\"reps\" \r\n                                required min=\"1\"/>\r\n                    </div>\r\n\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"weight\">Weight</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Must be greater than 0.\"\r\n                            value={weight}\r\n                            onChange={e => setWeight(e.target.value)} \r\n                            id=\"weight\" \r\n                            required min=\"1\"/>\r\n                    </div>\r\n\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"unit\">Unit</label>\r\n                        <select name=\"unit\" id=\"unit\" onChange={e => setUnit(e.target.value)} required>\r\n                            <option value=\"kgs\">kgs</option>\r\n                            <option value=\"lbs\">lbs</option>\r\n                            <option value=\"miles\">miles</option>\r\n                            <option value=\"mins\">mins</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"date\">Date</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            placeholder=\"MM-DD-YY\"\r\n                            value={date}\r\n                            onChange={e => setDate(e.target.value)} \r\n                            id=\"date\"\r\n                            required\r\n                             />\r\n                    </div>\r\n                    \r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"submit\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={ addExercise }\r\n                            id=\"submit\"\r\n                        >Submit</button></label>\r\n                    </div>\r\n\r\n                </fieldset>\r\n                </form>\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddExercisePage;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\n\r\nexport const EditExercisePage = ({ exercise }) => {\r\n \r\n    // pre-set the content with that exercise\r\n    const [name, setName] = useState(exercise.name);\r\n    const [reps, setReps] = useState(exercise.reps);\r\n    const [weight, setWeight] = useState(exercise.weight);\r\n    const [unit, setUnit] = useState(exercise.unit);\r\n\r\n    // to prevent user refresh the page after pressing 'edit' on an object\r\n    let dateVariable = exercise.date;\r\n    if (dateVariable !== undefined) {\r\n        dateVariable = exercise.date.toLocaleString('en-US').slice(0,10);\r\n    } else {\r\n        dateVariable = exercise.date;\r\n    }\r\n\r\n    const [date, setDate] = useState(dateVariable);\r\n    \r\n    const history = useHistory();\r\n\r\n    const editExercise = async () => {\r\n        //makes an HTTP request to the endpoint PUT /exericses/${exercise._id} of the REST API\r\n        const response = await fetch(`/exercises/${exercise._id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ \r\n                name: name, \r\n                reps: reps, \r\n                weight: weight,\r\n                unit: unit,\r\n                date: date\r\n            }),\r\n            headers: {'Content-Type': 'application/json',},\r\n        });\r\n\r\n        if (response.status === 200) {\r\n            alert(\"Successfully edited document!\");\r\n        } else {\r\n            const errMessage = await response.json();\r\n            alert(`Failed to update document. Status ${response.status}. ${errMessage.Error}`);\r\n        }\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <article>\r\n            <h2>Edit Record</h2>\r\n            <p>Please replace the relevant information for the update.</p>\r\n            <form onSubmit={(e) => { e.preventDefault();}}>   \r\n                <fieldset>\r\n                    <legend>Workout record</legend>\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"name\">Exercise</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Name of the exercise\"\r\n                            value= {name}\r\n                            onChange={e => setName(e.target.value)} \r\n                            id=\"exercise\" \r\n                            required\r\n                            pattern=\"\\S+.*\"/>\r\n                    </div>\r\n                    \r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"reps\">Repetitions</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={reps}\r\n                                placeholder=\"Number of repetitions\"\r\n                                onChange={e => setReps(e.target.value)} \r\n                                id=\"reps\" \r\n                                required min=\"1\"/>\r\n                    </div>\r\n\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"weight\">Weight</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Weight of the exercise\"\r\n                            value={weight}\r\n                            onChange={e => setWeight(e.target.value)} \r\n                            id=\"weight\" \r\n                            required min=\"1\"/>\r\n                    </div>\r\n\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"unit\">Unit</label>\r\n                        <select name=\"unit\" id=\"unit\" onChange={e => setUnit(e.target.value)} required>\r\n                            <option value=\"kgs\">kgs</option>\r\n                            <option value=\"lbs\">lbs</option>\r\n                            <option value=\"miles\">miles</option>\r\n                            <option value=\"mins\">mins</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"date\">Date</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            placeholder=\"MM-DD-YY\"\r\n                            value={date}\r\n                            onChange={e => setDate(e.target.value)} \r\n                            id=\"date\"\r\n                            required\r\n                            pattern=\"\\d{2}-\\d{2}-\\d{4}\" />\r\n                    </div>\r\n                    \r\n                    <div className='form-container'>\r\n                        <label htmlFor=\"submit\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={ editExercise }\r\n                            id=\"submit\"\r\n                        >Submit</button></label>\r\n                    </div>\r\n\r\n                </fieldset>\r\n                </form>\r\n            </article>\r\n        </>\r\n    );\r\n}\r\nexport default EditExercisePage;","import { AiOutlineFacebook, AiOutlineInstagram, AiOutlineTwitter } from \"react-icons/ai\";\r\n\r\nfunction FooterPage() {\r\n    return(\r\n        <footer>\r\n            <div className=\"social-media\">\r\n                <a href=\"https://www.facebook.com/\" title=\"for reference only\"><AiOutlineFacebook className=\"social-icon\"/></a>\r\n                <a href=\"https://www.instagram.com/\" title=\"for reference only\" ><AiOutlineInstagram className=\"social-icon\"/></a>\r\n                <a href=\"https://twitter.com/\" title=\"for reference only\"><AiOutlineTwitter className=\"social-icon\"/></a>\r\n            </div>\r\n            <p>© 2022 Long To Lotto Tang</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default FooterPage;","// Import dependencies\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState } from 'react';\n\n// Import Components, styles, media\nimport './App.css';\n\n// Import Pages\nimport HeaderPage from './pages/HeaderPage';\nimport HomePage from './pages/HomePage';\nimport AddExercisePage from './pages/AddExercisePage';\nimport EditExercisePage from './pages/EditExercisePage';\nimport FooterPage from './pages/FooterPage';\n\n// Define the function that renders the content in routes using State.\nfunction App() {\n\n  const [exercise, setExercise] = useState([]);\n\n  return (\n    <>\n      <Router>\n\n          <HeaderPage />\n\n          <main>\n            <Route path=\"/\" exact>\n              <HomePage setExercise={setExercise} />\n            </Route>\n\n            <Route path=\"/add-exercise\">\n              <AddExercisePage />\n            </Route>\n            \n            <Route path=\"/edit-exercise\">\n              <EditExercisePage exercise={exercise} />\n            </Route>\n          </main>\n          <FooterPage />\n\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}